sap.ui.define(["sap/ui/core/XMLComposite","sap/ui/model/json/JSONModel","sap/m/MessageBox","sap/ui/core/Fragment","sap/ui/model/Filter","sap/ui/model/FilterOperator","com/livanova/substitutemanager/formatters/formatter","sap/ui/model/Sorter"],function(e,t,o,r,i,l,s,a){return e.extend("com.livanova.substitutemanager.CustomControls.WorkflowListControl",{metadata:{properties:{approverData:{type:"object"},controller:{type:"object"},visibleTbl:{type:"boolean",defaultValue:false},noWorkflowsText:"string"}},formatter:s,onAfterRendering:function(){if(this.alreadyRendered){return}this.alreadyRendered=true;var e=new t;this.setModel(e,"viewControl");this.getModel("viewControl").setProperty("/filterInserted",false);var o=new t;this.setModel(o,"workflowModel");var r=this.getApproverData();var s=this.getController();this.filters=[];var a=[];if(r){this.getModel("viewControl").setProperty("/approver",true);var n=this.getController().getResourceBundle();var f=n.getText("noWorkflows");this.setNoWorkflowsText(f);a.push(new i("ApproverId",l.EQ,r.Id));var d=s.fixDate(r.ValidFrom);var h=s.fixDate(r.ValidTo);a.push(new i("ApprovalDate",l.BT,d,h))}else{this.setVisibleTbl(true)}this.setBusyControl(r,true);s.getModel("approversMgmtModel").read("/WorkflowSet",{filters:a,success:function(e){s.fixDateVisualization(e.results);this.getModel("workflowModel").setData(e.results);this.getModel("workflowModel").refresh(true);this.updateFiltersControl(e.results);this.onFiltersApplyControl("refresh");if(r&&e.results.length===0){this.switchView()}else{this.setVisibleTbl(true)}this.setBusyControl(r,false)}.bind(this),error:function(e){this.setBusyControl(r,false);s.comunicationError(e)}.bind(this)})},setBusyControl:function(e,t){if(e){if(t){sap.ui.core.BusyIndicator.show()}else{sap.ui.core.BusyIndicator.hide()}}else{this.byId("tableWorkflow").setBusy(t)}},switchView:function(){if(this.getVisibleTbl()!==false){this.setVisibleTbl(false)}},updateFiltersControl:function(e){var t=[];var o=[];var r=[{Approved:true},{Approved:false}];if(e.length>0){e.forEach(function(e){var r=t.find(function(t){return t.ApproverId===e.ApproverId});if(!r){t.push({ApproverName:e.ApproverName,ApproverId:e.ApproverId})}var i=o.find(function(t){return t.Description===e.Description});if(!i){o.push({Description:e.Description})}})}this.getModel("viewControl").setProperty("/filterApproverList",t);this.getModel("viewControl").setProperty("/filterWorkflowList",o);this.getModel("viewControl").setProperty("/filterState",r);var i=this.getModel("viewControl").getProperty("/dateChanged");if(!i){var l=this.getController();var s=l.getModel("viewModel").getProperty("/today");var a=new Date(s),n=new Date(s);for(var f=0;f<e.length;f++){a=e[f].ApprovalDate<=a?e[f].ApprovalDate:a;n=e[f].ApprovalDate>=n?e[f].ApprovalDate:n}this.getModel("viewControl").setProperty("/startDateFilter",a);this.getModel("viewControl").setProperty("/endDateFilter",n)}},onFiltersApplyControl:function(e,t){var o=[];var r=this.getModel("viewControl")?this.getModel("viewControl").getProperty("/dateChanged"):undefined;var s=this.getModel("viewControl").getProperty("/startDateFilter");var a=this.getModel("viewControl").getProperty("/endDateFilter");if(e){var n={};if(this.filterDialogWorkflow){n=this.filterDialogWorkflow.getSelectedFilterCompoundKeys()}if(t){o=o.concat(e)}var f=Object.keys(n);if(f.length>0){for(var d=0;d<f.length;d++){var h=[];var p=Object.keys(n[f[d]]);for(var u=0;u<p.length;u++){if(p[u]==="false"||p[u]==="true"){p[u]=p[u]==="true"}h.push(new i(f[d],l.EQ,p[u]))}o.push(new i(h,false))}}}if(e!=="refresh"&&r===true){this.reloadTable(s,a)}this.byId("tableWorkflow").getBinding("items").filter(o,"Application");this.changeFilterInserted()},reloadTable:function(e,t){var o=[];var r=this.getApproverData();var s=this.getController();if(r){o.push(new i("ApproverId",l.EQ,r.Id));if(e<r.ValidFrom){e=new Date(r.ValidFrom)}if(t>r.ValidTo){t=new Date(r.ValidTo)}}o.push(new i("ApprovalDate",l.BT,s.fixDate(e),s.fixDate(t)));this.byId("tableWorkflow").setBusy(true);s.getModel("approversMgmtModel").read("/WorkflowSet",{filters:o,success:function(e){s.fixDateVisualization(e.results);this.getModel("workflowModel").setData(e.results);this.getModel("workflowModel").refresh(true);this.byId("tableWorkflow").setBusy(false)}.bind(this),error:function(e){this.byId("tableWorkflow").setBusy(false);s.comunicationError(e)}.bind(this)})},changeFilterInserted:function(){var e=false;var t=this.getModel("viewControl")?this.getModel("viewControl").getProperty("/dateChanged"):undefined;var o=this.filterDialogWorkflow;if(t){e=true}if(o){if(o.getSelectedFilterItems().length>0){e=true}}this.getModel("viewControl").setProperty("/filterInserted",e)},onFilterControl:function(e){var t=this.getController();var o=this.getApproverData();if(!this.filterDialogWorkflow){r.load({name:"com.livanova.substitutemanager.view.fragments.FilterDialogWorkflow",controller:this}).then(function(e){this.filterDialogWorkflow=e;this.filterDialogWorkflow.setModel(this.getModel("viewControl"),"viewControl");this.filterDialogWorkflow.setModel(t.getModel("viewModel"),"viewModel");this.filterDialogWorkflow.setModel(t.getOwnerComponent().getModel("i18n"),"i18n");if(o){var r=this.filterDialogWorkflow.getFilterItems().find(function(e){return e.getKey()==="ApproverId"});this.filterDialogWorkflow.removeFilterItem(r)}this.filterDialogWorkflow.open()}.bind(this))}else{this.filterDialogWorkflow.open()}},onFilterCancelControl:function(e){var t=this.getModel("workflowModel").getData();this.updateFiltersControl(t)},onFilterResetControl:function(e){var t=this.getModel("workflowModel").getData();this.filterDialogWorkflow=undefined;this.onRefreshControl(true)},onSearchControl:function(e){var t=[],o=e.getParameter("query");if(o&&o.length>0){t=[new i("Description",l.Contains,o)]}var r=this.filters.concat(t);this.onFiltersApplyControl(t,true)},onRefreshControl:function(e){var t=this.getApproverData();var o=this.getController();var r=this.getModel("viewControl").getProperty("/startDateFilter");var s=this.getModel("viewControl").getProperty("/endDateFilter");var a=this.getModel("viewControl").getProperty("/dateChanged");var n=[];if(t){n.push(new i("ApproverId",l.EQ,t.Id));if(a){if(r<t.ValidFrom){r=new Date(t.ValidFrom)}if(s>t.ValidTo){s=new Date(t.ValidTo)}}else{r=new Date(t.ValidFrom);s=new Date(t.ValidTo)}}if(!(e===true)||t){n.push(new i("ApprovalDate",l.BT,o.fixDate(r),o.fixDate(s)))}this.byId("tableWorkflow").setBusy(true);o.getModel("approversMgmtModel").read("/WorkflowSet",{filters:n,success:function(t){o.fixDateVisualization(t.results);this.getModel("workflowModel").setData(t.results);this.getModel("workflowModel").refresh(true);this.updateFiltersControl(t.results);this.onFiltersApplyControl("refresh");var r=o.getView().getModel("i18n").getResourceBundle();var i=r.getText("updated");this.byId("tableWorkflow").setBusy(false);if(!(e===true)){o.comunicationSuccess(r,i)}}.bind(this),error:function(e){this.byId("tableWorkflow").setBusy(false);o.comunicationError(e)}.bind(this)})},onSortControl:function(e){var t=this.getController();if(!this.popoverSortWorkflow){this.popoverSortWorkflow=sap.ui.xmlfragment("com.livanova.substitutemanager.view.fragments.SorterWorkflowPopover",this);this.addDependent(this.popoverSortWorkflow)}this.popoverSortWorkflow.openBy(e.getSource())},sortTableControl:function(e){var t={};var o=e.getSource().getCustomData();for(var r=0;r<e.getSource().getCustomData().length;r++){t[o[r].getKey()]=o[r].getValue()}var i=new a(t.path,t.descending==="true");this.byId("tableWorkflow").getBinding("items").sort(i);this.popoverSortWorkflow.close()},onChangeFilterDateControl:function(e){this.getModel("viewControl").setProperty("/dateChanged",e)}})},true);